name: Reset packages
on:
  workflow_dispatch: {}
  push:
    paths:
      - .github/scripts/root.Dockerfile
jobs:
  packages-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          persist-credentials: true

      - id: variables
        run: |
          echo platform=$(cat ARCH.bioc) >> $GITHUB_OUTPUT
          echo rootcontainer=$(cat ROOT_CONTAINER.bioc) >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
        if: contains(steps.variables.outputs.platform, 'arm64')

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ steps.variables.outputs.platform }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container with root user
        id: dockerbuild
        uses: docker/build-push-action@v3
        with:
          file: .github/scripts/root.Dockerfile
          push: true
          load: false
          tags: ${{ steps.variables.outputs.rootcontainer }}
          platforms: ${{ steps.variables.outputs.platform }}

  packages-set:
    runs-on: ubuntu-latest
    needs: packages-build
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          persist-credentials: true

      - id: variables
        run: |
          echo platform=$(cat ARCH.bioc) >> $GITHUB_OUTPUT
          echo rootcontainer=$(cat ROOT_CONTAINER.bioc) >> $GITHUB_OUTPUT

      - name: Copy old run
        run: |
          set -x
          STARTTIME="$(cat runstarttime)" || true
          LOGDIR="logs/$(cat runstarttime)" || true
          mv runstarttime "$LOGDIR"/ || true
          mv uniquedeps.json "$LOGDIR"/ || true
          mv packages.json "$LOGDIR"/ || true
          mv biocdeps.json "$LOGDIR"/ || true
          mv tobuild.txt "$LOGDIR"/ || true
          mv lists "$LOGDIR"/lists || true
          repodir=$(pwd)
          mkdir -p /tmp/rootimage
          cd /tmp/rootimage
          docker save ${{ steps.variables.outputs.rootcontainer }} > image.tar
          tar -xvf image.tar
          # Untar the last layer (Bioc build layer)
          cat manifest.json | awk -F'"' '{print $(NF-1)}' > /tmp/layername
          rm image.tar
          ls | grep -v "$(cat /tmp/layername | awk -F'/' '{print $1}')" | xargs rm -rf
          cat /tmp/layername | xargs -i bash -c "tar -xvf {} && rm {}"
          cp -r tmp/bioc_build $repodir/
          cp tmp/bioc_build/*.json $repodir/
          cp tmp/bioc_build/biocdeps.json $repodir/packages.json
          docker push ${{ steps.variables.outputs.rootcontainer }}
          cd $repodir
          bash .github/scripts/reset_packages.sh
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add .
          git commit -m "Reset packages"
          git push
